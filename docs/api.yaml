swagger: "2.0"
info:
  description: "This is the REST API definition for school management app by Group B - MSC IT Batch 15 ICBT"
  version: "1.0.0"
  title: "School Management"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api"
tags:
  - name: "admin"
    description: "Operations about admin"
schemes:
  - "https"
  - "http"

paths:
  /admin/:
    get:
      tags:
        - "admin"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findPetsByStatus"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Admin"

  /admin/login:
    post:
      tags:
        - "admin"
      summary: "Logs admin into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "adminID and password for login"
          required: true
          schema:
            $ref: "#/definitions/AdminLoginSchema"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
        400:
          description: "Invalid username/password supplied"

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:

  Admin:
    type: "object"
    required:
      - adminID
      - password
    properties:
      _id:
        type: "string"
      adminID:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      __v:
        type: "integer"

  AdminLoginSchema:
    type: "object"
    required:
      - adminID
      - password
    properties:
      adminID:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"